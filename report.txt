Client.c

- The AIMD algorithm starts by defining round trip time and base round trip time(0.1)
- An important aspect of this algorithm is the fact that ret and select are able to read the ACK's concurrently from the socket using a dile descriptor in the socket 
- the socket is open as long as the end of file is not found
- packets are built according to the payload and last variable
- ack handling:
    - as long as there are packets to be sent and  no packet has been acknowledged, resend the packets in the window of size N (cwnd)
    - there is handling of the sequence number overflow and the last that is set by the server is read to handle the last acknowledgement
- each time an ack is received, the packet buffer window is moved one forward by deleting the first element.
- setsockopt is used to set a timeout to wait for an acknowledgement in the socket
- cwnd is set to 1 initially and it increases by 1/cwnd each time it receives an ack
- each time a packet has to be resent because of a lack of an ack, it is halved

Server.c 

- The server side is only acknowledging the sequence number that it is expecting and it discards everything else. 
-fprintf is used to write to the file and we are making sure that we handle the case where the payload is not all of the possible length (at the eof)

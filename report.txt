Client.c

- The AIMD algorithm starts by defining round trip time and base round trip time(0.1)
- An important aspect of this algorithm is the fact that ret and select are able to read the ACK's concurrently from the socket using a dile descriptor in the socket 
- the socket is open as long as the end of file is not found
- packets are built according to the payload and last variable
- ack handling:
    - as long as there are packets to be sent and  no packet has been acknowledged, resend the packets in the window of size N (cwnd)
    - there is handling of the sequence number overflow and the last that is set by the server is read to handle the last acknowledgement
    - cwnd is increased by one if cwnd is less that 1 and decreased to half otherwise. However, because of the way we are handling our buffer, N has to be >=2 and therefore we have set it to 2. 
-timeout is set to 100 ms 
- each time an ack is received, the packet buffer window is moved one forward by deleting the first element.
- setsockopt is used to set a timeout to wait for an acknowledgement in the socket

Server.c 

- The server side is only acknowledging the sequence number that it is expecting and it discards everything else. 
-fprintf is used to write to the file and we are making sure that we handle the case where the payload is not all of the possible length (at the eof)
